{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/video.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction UploadComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Description is required and must be less than 160 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r5);\n  }\n}\nfunction UploadComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Category is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" A video file is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UploadComponent {\n  constructor(fb, videoService, router) {\n    this.fb = fb;\n    this.videoService = videoService;\n    this.router = router;\n    this.selectedFile = null;\n    this.categories = ['Category1', 'Category2', 'Category3']; // Replace with your categories\n    this.uploadForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', [Validators.required, Validators.maxLength(160)]],\n      category: ['', Validators.required],\n      file: [null, Validators.required]\n    });\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onSubmit() {\n    if (this.uploadForm.invalid || !this.selectedFile) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', this.uploadForm.get('title')?.value);\n    formData.append('description', this.uploadForm.get('description')?.value);\n    formData.append('categories', this.uploadForm.get('category')?.value);\n    formData.append('file', this.selectedFile);\n    this.videoService.uploadVideo(formData).subscribe(response => {\n      console.log('Upload successful', response);\n      this.router.navigate(['/']);\n    }, error => {\n      console.error('Error uploading video', error);\n    });\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.VideoService), i0.ɵɵdirectiveInject(i3.Router));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  decls: 27,\n  vars: 7,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"formControlName\", \"title\", \"id\", \"title\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"formControlName\", \"description\", \"id\", \"description\", \"maxlength\", \"160\", 1, \"form-control\"], [\"for\", \"category\"], [\"formControlName\", \"category\", \"id\", \"category\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"file\"], [\"type\", \"file\", \"id\", \"file\", \"accept\", \".mp4, .avi, .mov\", 1, \"form-control-file\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"], [3, \"value\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Upload Video\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UploadComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, UploadComponent_div_8_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"textarea\", 7);\n      i0.ɵɵtemplate(13, UploadComponent_div_13_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 9);\n      i0.ɵɵtemplate(18, UploadComponent_option_18_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, UploadComponent_div_19_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Video File\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 12);\n      i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_23_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, UploadComponent_div_24_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 13);\n      i0.ɵɵtext(26, \"Upload Video\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.uploadForm.get(\"title\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.uploadForm.get(\"title\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.uploadForm.get(\"description\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.uploadForm.get(\"description\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.uploadForm.get(\"category\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.uploadForm.get(\"category\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile && ((tmp_5_0 = ctx.uploadForm.get(\"file\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.uploadForm.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UploadComponent","constructor","fb","videoService","router","uploadForm","group","title","required","description","maxLength","category","file","onFileSelected","event","selectedFile","target","files","onSubmit","invalid","formData","FormData","append","get","value","uploadVideo","subscribe","response","console","log","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\SW-Projects\\BARBACENA_10092024\\BARBACENA_10092024.App\\ClientApp\\src\\app\\upload\\upload.component.ts","D:\\SW-Projects\\BARBACENA_10092024\\BARBACENA_10092024.App\\ClientApp\\src\\app\\upload\\upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { VideoService } from '../services/video.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n  uploadForm: FormGroup;\n  selectedFile: File | null = null;\n  categories: string[] = ['Category1', 'Category2', 'Category3']; // Replace with your categories\n\n  constructor(private fb: FormBuilder, private videoService: VideoService, private router: Router) {\n    this.uploadForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', [Validators.required, Validators.maxLength(160)]],\n      category: ['', Validators.required],\n      file: [null, Validators.required],\n    });\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onSubmit() {\n    if (this.uploadForm.invalid || !this.selectedFile) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('title', this.uploadForm.get('title')?.value);\n    formData.append('description', this.uploadForm.get('description')?.value);\n    formData.append('categories', this.uploadForm.get('category')?.value);\n    formData.append('file', this.selectedFile);\n\n    this.videoService.uploadVideo(formData).subscribe(\n      (response) => {\n        console.log('Upload successful', response);\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        console.error('Error uploading video', error);\n      }\n    );\n  }\n}\n","<div class=\"container mt-5\">\n  <h2>Upload Video</h2>\n  <form [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" formControlName=\"title\" class=\"form-control\" id=\"title\" />\n      <div *ngIf=\"uploadForm.get('title')?.invalid && uploadForm.get('title')?.touched\" class=\"text-danger\">\n        Title is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea formControlName=\"description\" class=\"form-control\" id=\"description\" maxlength=\"160\"></textarea>\n      <div *ngIf=\"uploadForm.get('description')?.invalid && uploadForm.get('description')?.touched\" class=\"text-danger\">\n        Description is required and must be less than 160 characters\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"category\">Category</label>\n      <select formControlName=\"category\" class=\"form-control\" id=\"category\">\n        <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n      </select>\n      <div *ngIf=\"uploadForm.get('category')?.invalid && uploadForm.get('category')?.touched\" class=\"text-danger\">\n        Category is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"file\">Video File</label>\n      <input type=\"file\" (change)=\"onFileSelected($event)\" class=\"form-control-file\" id=\"file\" accept=\".mp4, .avi, .mov\" />\n      <div *ngIf=\"!selectedFile && uploadForm.get('file')?.touched\" class=\"text-danger\">\n        A video file is required\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"uploadForm.invalid\">Upload Video</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}