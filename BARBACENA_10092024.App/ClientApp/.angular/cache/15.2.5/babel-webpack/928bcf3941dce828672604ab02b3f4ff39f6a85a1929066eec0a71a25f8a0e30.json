{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(videoService) {\n    this.videoService = videoService;\n    this.videos = [];\n    this.serverUrl = 'http://127.0.0.1:8080/';\n    this.videoFilePath = '';\n  }\n  ngOnInit() {\n    this.videoService.getAllVideos().subscribe(data => {\n      this.videos = data.map(video => ({\n        ...video,\n        thumbnail: this.serverUrl + 'Thumbnails/' + video.thumbnail\n      }));\n    });\n  }\n  ngAfterViewInit() {\n    // Initialize Bootstrap tooltips\n    const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    tooltipTriggerList.forEach(tooltipTrigger => {\n      new bootstrap.Tooltip(tooltipTrigger);\n    });\n  }\n  showTooltip(event) {\n    const tooltip = bootstrap.Tooltip.getInstance(event.target);\n    if (tooltip) {\n      tooltip.show();\n    }\n  }\n  hideTooltip(event) {\n    const tooltip = bootstrap.Tooltip.getInstance(event.target);\n    if (tooltip) {\n      tooltip.hide();\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAAwBA,SAAS,QAAgB,eAAe;AAWzD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAJhC,WAAM,GAAY,EAAE;IACpB,cAAS,GAAG,wBAAwB;IACpC,kBAAa,GAAG,EAAE;EAE+B;EAEjDC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAClD,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;QAC/B,GAAGA,KAAK;QACRC,SAAS,EAAE,IAAI,CAACC,SAAS,GAAG,aAAa,GAAGF,KAAK,CAACC;OACnD,CAAC,CAAC;IAEL,CAAC,CAAC;EACJ;EAEAE,eAAe;IACb;IACA,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAAC,4BAA4B,CAAC,CAAC;IAC9FJ,kBAAkB,CAACK,OAAO,CAACC,cAAc,IAAG;MAC1C,IAAIC,SAAS,CAACC,OAAO,CAACF,cAAc,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAG,WAAW,CAACC,KAAiB;IAC3B,MAAMC,OAAO,GAAGJ,SAAS,CAACC,OAAO,CAACI,WAAW,CAACF,KAAK,CAACG,MAAqB,CAAC;IAC1E,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACG,IAAI,EAAE;;EAElB;EAEAC,WAAW,CAACL,KAAiB;IAC3B,MAAMC,OAAO,GAAGJ,SAAS,CAACC,OAAO,CAACI,WAAW,CAACF,KAAK,CAACG,MAAqB,CAAC;IAC1E,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACK,IAAI,EAAE;;EAElB;CACD;AAtCY7B,aAAa,eALzBD,SAAS,CAAC;EACT+B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWhC,aAAa,CAsCzB;SAtCYA,aAAa","names":["Component","HomeComponent","constructor","videoService","ngOnInit","getAllVideos","subscribe","data","videos","map","video","thumbnail","serverUrl","ngAfterViewInit","tooltipTriggerList","Array","from","document","querySelectorAll","forEach","tooltipTrigger","bootstrap","Tooltip","showTooltip","event","tooltip","getInstance","target","show","hideTooltip","hide","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\SW-Projects\\BARBACENA_10092024\\BARBACENA_10092024.App\\ClientApp\\src\\app\\features\\home\\home.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Video } from 'src/app/interfaces/video.model';\r\nimport { VideoService } from 'src/app/services/video.service';\r\n\r\ndeclare var bootstrap: any; // Declare bootstrap to access tooltip\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n  videos: Video[] = [];\r\n  serverUrl = 'http://127.0.0.1:8080/';\r\n  videoFilePath = '';\r\n\r\n  constructor(private videoService: VideoService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.videoService.getAllVideos().subscribe((data) => {\r\n      this.videos = data.map(video => ({\r\n        ...video,\r\n        thumbnail: this.serverUrl + 'Thumbnails/' + video.thumbnail,\r\n      }));\r\n\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Initialize Bootstrap tooltips\r\n    const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\r\n    tooltipTriggerList.forEach(tooltipTrigger => {\r\n      new bootstrap.Tooltip(tooltipTrigger);\r\n    });\r\n  }\r\n\r\n  showTooltip(event: MouseEvent): void {\r\n    const tooltip = bootstrap.Tooltip.getInstance(event.target as HTMLElement);\r\n    if (tooltip) {\r\n      tooltip.show();\r\n    }\r\n  }\r\n\r\n  hideTooltip(event: MouseEvent): void {\r\n    const tooltip = bootstrap.Tooltip.getInstance(event.target as HTMLElement);\r\n    if (tooltip) {\r\n      tooltip.hide();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}