{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VideoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7193/api/videos';\n  }\n  getAllVideos() {\n    return this.http.get(`${this.apiUrl}/all`);\n  }\n  uploadVideo(formData) {\n    const headers = new HttpHeaders();\n    return this.http.post(`${this.apiUrl}/upload`, formData, {\n      headers\n    });\n  }\n}\nVideoService.ɵfac = function VideoService_Factory(t) {\n  return new (t || VideoService)(i0.ɵɵinject(i1.HttpClient));\n};\nVideoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VideoService,\n  factory: VideoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,mCAAmC;EAEb;EAEvCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,MAAM,CAAC;EACrD;EAEAC,WAAW,CAACC,QAAkB;IAC5B,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE;IACjC,OAAO,IAAI,CAACG,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,SAAS,EAAEE,QAAQ,EAAE;MAAEC;IAAO,CAAE,CAAC;EACvE;;AAZWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFX;AAAM","names":["HttpHeaders","VideoService","constructor","http","getAllVideos","get","apiUrl","uploadVideo","formData","headers","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\SW-Projects\\BARBACENA_10092024\\BARBACENA_10092024.App\\ClientApp\\src\\app\\services\\video.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Video } from '../interfaces/video.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VideoService {\r\n  private apiUrl = 'https://localhost:7193/api/videos';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllVideos(): Observable<Video[]> {\r\n    return this.http.get<Video[]>(`${this.apiUrl}/all`);\r\n  }\r\n\r\n  uploadVideo(formData: FormData): Observable<any> {\r\n    const headers = new HttpHeaders();\r\n    return this.http.post(`${this.apiUrl}/upload`, formData, { headers });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}